function setup(){setupThreeJS(),setupWorld(),requestAnimationFrame(function e(){renderer.render(scene,camera),requestAnimationFrame(e)})}function setupThreeJS(){scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e4),camera.position.y=400,camera.position.z=400,camera.rotation.x=-45*Math.PI/180,renderer=new THREE.CanvasRenderer,renderer.setSize(window.innerWidth/4,window.innerHeight/4,!1),document.body.appendChild(renderer.domElement)}function setupWorld(){geometry=new THREE.PlaneGeometry(2e3,2e3,20,20),material=new THREE.MeshBasicMaterial({color:16752256}),floor=new THREE.Mesh(geometry,material),floor.rotation.x=-90*Math.PI/180,scene.add(floor),geometry=new THREE.CubeGeometry(1,1,1),geometry.applyMatrix((new THREE.Matrix4).makeTranslation(0,.5,0)),material=new THREE.MeshDepthMaterial;for(var e=0;e<300;e++)building=new THREE.Mesh(geometry.clone(),material.clone()),building.position.x=4*Math.floor(200*Math.random()-100),building.position.z=4*Math.floor(200*Math.random()-100),building.scale.x=50*Math.random()+10,building.scale.y=Math.random()*building.scale.x*8+8,building.scale.z=building.scale.x,scene.add(building)}var scene,camera,renderer,geometry,material,floor,building;setup();